# Dynamic configuration
{% if traefik_cert_exists %}
tls:
  stores:
    default:
      defaultCertificate:
        certFile: /etc/traefik/traefik.crt
        keyFile: /etc/traefik/traefik.key
{% endif %}

http:
  middlewares:
    redirect-vault:
      redirectRegex:
        regex: ^https?://vault.{{ domain }}/(.*)
        replacement: http{% if traefik_cert_exists %}s{% endif %}://vault.{{ domain }}:8200/${1}
        permanent: true

  routers:
    # Expose Consul UI
    consul:
      rule: Host(`consul.{{ domain }}`)
      service: consul
      entryPoints: web{% if traefik_cert_exists %}-secure{% endif %}

    # Expose Traefik UI
    api:
      rule: Host(`traefik.{{ domain }}`)
      service: api@internal
      entryPoints: web{% if traefik_cert_exists %}-secure{% endif %}

    # Expose Vault UI
    vault:
      rule: Host(`vault.{{ domain }}`)
      service: vault
      entryPoints:
        - vault
        - web{% if traefik_cert_exists %}-secure{% endif %}

  services:
    consul:
      loadBalancer:
        servers:
          - url: http://consul.service.consul:8500

    vault:
      loadBalancer:
        servers:
          - url: http://vault:8200

# Forward DNS queries to the internal network's DNS server
tcp:
  routers:
    dns:
      entryPoints: dns-tcp
      rule: HostSNI(`*`)
      service: dns

  services:
    dns:
      loadBalancer:
        servers:
          - address: {{ hostvars['dns']['vagrant_ipv4'] | default(hostvars['dns']['ansible_default_ipv4']['address']) }}:53

udp:
  routers:
    dns:
      entryPoints: dns-udp
      service: dns

  services:
    dns:
      loadBalancer:
        servers:
          - address: {{ hostvars['dns']['vagrant_ipv4'] | default(hostvars['dns']['ansible_default_ipv4']['address']) }}:53
