{%- set network_interface_ipv4 = hostvars[inventory_hostname]['ansible_' + network_interface]['ipv4']['address'] | default(hostvars[inventory_hostname]['ansible_default_ipv4']['address']) -%}
datacenter = "dc1"
data_dir = "/opt/nomad"

bind_addr = "0.0.0.0"
advertise {
  http = "{{ network_interface_ipv4 }}:4646"
  rpc  = "{{ network_interface_ipv4 }}:4647"
  serf = "{{ network_interface_ipv4 }}:4648"
}

consul {
  address = "127.0.0.1:8500"
  # If the configuration is separated for server and client nodes, the tag
  # "controlplane" should only be used on the server nodes.
{% if nomad_is_server %}
  tags = ["controlplane"]
{% endif %}
}

{% if nomad_is_server %}
server {
  enabled = true
  # MUST be 16 bytes, Base64-encoded
  encrypt = "{{ lookup('password', '/tmp/nomadhash length=16') | b64encode }}"
  bootstrap_expect = {{ groups['controlplane'] | length }}
  server_join {
    retry_join = {{ groups['controlplane'] | map('extract', hostvars, ['ansible_' + network_interface, 'ipv4', 'address']) | list | to_json }}
    retry_max = 3
    retry_interval = "15s"
  }
}
{% endif %}

{% if nomad_is_client %}
{# loopback interface is `lo` on Linux, but `lo0` on macOS/BSD #}
client {
  enabled = true
  network_interface = "{{ network_interface | default(ansible_interfaces | select('match', '^lo\d?') | first) }}"
}
{% endif %}

telemetry {
  collection_interval = "1s"
  disable_hostname = true
  prometheus_metrics = true
  publish_allocation_metrics = true
  publish_node_metrics = true
}

{% if vault_nomad_token is defined %}
{% if nomad_is_server %}
vault {
  enabled = true
  address = "http://vault.service.consul:8200"
  task_token_ttl = "1h"
  create_from_role = "nomad-cluster"
  token = "{{ vault_nomad_token }}"
}
{% else %}
vault {
    enabled = true
    address = "http://vault.service.consul:8200"
}
{% endif %}
{% endif %}
