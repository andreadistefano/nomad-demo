---
- name: Create temporary download directory if it does not exist
  delegate_to: localhost
  become: no
  file:
    path: "{{ playbook_dir }}/.ansible_download_cache"
    state: directory
    mode: 0755

- block:
    - name: Determine latest GitHub release (local)
      delegate_to: localhost
      become: false
      uri:
        url: "https://api.github.com/repos/coredns/coredns/releases/latest"
        body_format: json
      register: _github_release
      until: _github_release.status == 200
      retries: 5

    - name: Set coredns_version
      set_fact: coredns_version="{{ _github_release.json.tag_name | regex_replace('^v?(.*)$', '\\1') }}"

  when: (coredns_version is not defined) or (coredns_version == 'latest')
  run_once: true

- name: Download CoreDNS and verify SHA256 checksum
  delegate_to: localhost
  become: no
  get_url:
    url: "https://github.com/coredns/coredns/releases/download/v{{ coredns_version }}/coredns_{{ coredns_version }}_linux_amd64.tgz"
    dest: "{{ playbook_dir }}/.ansible_download_cache/coredns_{{ coredns_version }}_linux_amd64.tgz"
    checksum: "sha256:https://github.com/coredns/coredns/releases/download/v{{ coredns_version }}/coredns_{{ coredns_version }}_linux_amd64.tgz.SHA256"

- name: Extract CoreDNS
  unarchive:
    src: "{{ playbook_dir }}/.ansible_download_cache/coredns_{{ coredns_version }}_linux_amd64.tgz"
    dest: /usr/bin

- name: Create coredns user
  user:
    name: coredns
    home: /etc/coredns
    system: yes
    shell: /usr/bin/false
    state: present

- name: Copy config
  template:
    src: "Corefile.j2"
    dest: "/etc/coredns/Corefile"
    mode: 0644

- name: Copy systemd service
  copy:
    src: "coredns.service"
    dest: "/etc/systemd/system/coredns.service"
    mode: 0644

- name: Disable systemd-resolved service
  systemd:
    name: systemd-resolved
    state: stopped
    enabled: no

- name: Set nameserver to localhost
  copy:
    content: 'nameserver 127.0.0.1'
    dest: /etc/resolv.conf
    mode: 0644

- name: Start coredns service
  systemd:
    name: coredns
    state: restarted
    daemon_reload: yes
    enabled: yes
