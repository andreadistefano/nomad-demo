{%- set network_interface_ipv4 = hostvars[inventory_hostname]['vagrant_ipv4'] | default(hostvars[inventory_hostname]['ansible_default_ipv4']['address']) -%}
# https://www.vaultproject.io/docs/configuration/storage/raft
storage "raft" {
  path = "{{ vault_data_dir }}"
  node_id = "{{ inventory_hostname }}"

{# {% for host in groups['vault'] %}
  retry_join {
    leader_api_addr = "http://{{ hostvars[host]['vagrant_ipv4'] | default(hostvars[host]['ansible_default_ipv4']['address']) }}:8200"
    # leader_ca_cert_file = "/path/to/ca1"
    # leader_client_cert_file = "/path/to/client/{{ host }}.crt"
    # leader_client_key_file = "/path/to/client/{{ host }}.key"
  }
{% endfor %} #}
}

# https://www.vaultproject.io/docs/configuration/listener/tcp
# Listen to localhost
listener "tcp" {
  address = "127.0.0.1:8200"
  # tls_cert_file = "/path/to/fullchain.pem"
  # tls_key_file  = "/path/to/privkey.pem"
  tls_disable = true
}

# Listen to internal network
listener "tcp" {
  address = "{{ network_interface_ipv4 }}:8200"
  # tls_cert_file = "/path/to/fullchain.pem"
  # tls_key_file  = "/path/to/privkey.pem"
  tls_disable = true
  telemetry {
    unauthenticated_metrics_access = true
  }
}

telemetry {
  prometheus_retention_time = "30s"
  disable_hostname = true
}

# Advertise the non-loopback interface
api_addr = "http://{{ vault_domain_name | default(network_interface_ipv4) }}:8200"
cluster_addr = "http://{{ vault_domain_name | default(network_interface_ipv4) }}:8201"
cluster_name = "vault"

ui = true
